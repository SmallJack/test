<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.wms.mapper.ProductStockMapper">
	<resultMap id="base_mapper" type="ProductStock">
		<id column="id" property="id" />
		<result column="amount" property="amount" />
		<result column="outcomeDate" property="outcomeDate" />
		<result column="storeNumber" property="storeNumber" />
		<result column="price" property="price" />
		<result column="incomeDate" property="incomeDate" />

		<association property="product" javaType="Product">
			<result property="name" column="p_name" />
			<result property="sn" column="p_sn" />
			<result property="id" column="p_id" />
			<association property="brand" javaType="Brand">
				<result property="name" column="b_name" />
				<result property="id" column="b_id" />
			</association>
		</association>

		<association property="depot" javaType="Depot">
			<result property="name" column="d_name" />
			<result property="id" column="d_id" />
		</association>

	</resultMap>
	<delete id="delete">
		delete from productStock where id = #{id}
	</delete>
	<insert id="save" useGeneratedKeys="true" keyProperty="id"
		keyColumn="id">
		insert into
		productStock
		(amount,storeNumber,price,depot_id,incomeDate,product_id)
		values
		(#{amount},#{storeNumber},#{price},#{depot.id},#{incomeDate},#{product.id})
	</insert>
	<update id="update">
		update productStock
		set
		amount=#{amount},
		outcomeDate=#{outcomeDate},
		storeNumber=#{storeNumber},
		price=#{price}
		where id =
		#{id}
	</update>

	<sql id="base_colum">
		ps.id,ps.price,ps.storeNumber,ps.amount,ps.incomeDate,ps.outcomeDate,ps.product_id,ps.depot_id,p.id
		p_id,
		p.name p_name,p.sn p_sn ,d.id d_id,d.name d_name ,b.id
		b_id,b.name b_name
	</sql>

	<sql id="base_table">
		productStock ps join product p on ps.product_id = p.id join
		depot d on ps.depot_id = d.id join brand b on p.brand_id = b.id
	</sql>

	<sql id="conditions_sql">
		<where>
			<if test="depotId >=0">
				d.id = #{depotId}
			</if>

			<if test="brandId >=0">
				and b.id = #{brandId}
			</if>
			<if test="keyword !=null and keyword != ''">
				and (p.sn like concat('%',#{keyword},'%') or p.name like
				concat('%',#{keyword},'%'))
			</if>

		</where>
	</sql>

	<select id="getTotalCount" resultType="long">
		select count(*) from  <include refid="base_table" />
		<include refid="conditions_sql"></include>
	</select>
	<select id="getListData" resultMap="base_mapper">
		select
		<include refid="base_colum" />
		from
		<include refid="base_table" />
		<include refid="conditions_sql"></include>
		limit #{beginIndex},#{pageSize}
	</select>
	
	<select id="selectByDeoptIdAndProductId" resultMap="base_mapper">
	  select ps.id,ps.price,ps.storeNumber,ps.amount,ps.incomeDate,ps.outcomeDate,ps.product_id,ps.depot_id from productStock ps where
	  ps.product_id = #{productId} and ps.depot_id = #{depotId}
	</select>
	
	
	
	
	
	
</mapper>