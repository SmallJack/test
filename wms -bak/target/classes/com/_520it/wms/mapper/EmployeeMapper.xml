<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com._520it.wms.mapper.EmployeeMapper">
	<resultMap type="Employee" id="base_result">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="password" column="password" />
		<result property="email" column="email" />
		<result property="age" column="age" />
		<result property="admin" column="admin" />
		<!-- 员工和部门的关系映射 -->
		<association property="dept" javaType="Department">
			<result property="id" column="did" />
			<result property="name" column="dname" />
		</association>
		<!-- 员工和角色的关系映射 -->
		<collection property="roles" ofType="Role"
			select="com._520it.wms.mapper.RoleMapper.selectRolesByEmployeeId"
			column="id"></collection>
	</resultMap>

	<insert id="save" useGeneratedKeys="true" keyColumn="id"
		keyProperty="id">
		insert into
		employee(name,password,email,age,admin,dept_id)
		values(#{name},#{password},#{email},#{age},#{admin},#{dept.id})
	</insert>

	<delete id="delete">
		delete from employee where id = #{id}
	</delete>

	<update id="update">
		update employee
		<set>
			<if test="name!=null">
				name=#{name},
			</if>
			<if test="password!=null">
				password=#{password},
			</if>
			<if test="email!=null">
				email=#{email},
			</if>
			<if test="age!=null">
				age=#{age},
			</if>
			<if test="admin!=null">
				admin=#{admin},
			</if>
			<if test="dept!=null">
				dept_id=#{dept.id},
			</if>
		</set>
		where id = #{id}
	</update>
	<!-- 根据主键查询员工信息,以及员工所在的部门和员工所拥有的权限 -->
	<select id="get" resultMap="base_result">
		select e.*,d.id did,d.name dname,r.id
		rid,r.name rname,r.sn rsn
		from employee e
		left join department d
		on
		e.dept_id=d.id
		left join employee_role er
		on e.id=er.employee_id
		left
		join role r
		on r.id=er.role_id
		where e.id=#{id}
	</select>
	<select id="list" resultMap="base_result">
		select e.*,d.id did,d.name
		dname,r.id
		rid,r.name rname,r.sn rsn
		from employee e
		left join department
		d
		on e.dept_id=d.id
		left join employee_role er
		on e.id=er.employee_id
		left join role r
		on r.id=er.role_id
	</select>
	<sql id="conditions_sql">
		<where>
			<if test="keywords!=null and keywords!=''">
				(
				e.name like concat('%',#{keywords},'%')
				or
				e.email like
				concat('%',#{keywords},'%')
				)
			</if>
			<if test="deptId!=null and deptId!=-1">
				and e.dept_id=#{deptId}
			</if>
		</where>
	</sql>
	<select id="getListData" resultMap="base_result">
		select e.*,d.id did,d.name dname
		from
		employee e
		left join department d
		on e.dept_id=d.id
		<include refid="conditions_sql"></include>
		limit
		#{beginIndex},#{pageSize}
	</select>

	<select id="getTotalCount" resultType="long">
		select count(e.id)
		from
		employee e
		left join department d
		on
		e.dept_id=d.id
		<include refid="conditions_sql"></include>
	</select>
	<!-- 解除对应员工和部门的关系 -->
	<update id="deleteRelation">
		update employee set dept_id=null where
		dept_id=#{deptId}
	</update>
	<!-- 保存员工和部门的关系数据:多对多,中间表 -->
	<insert id="saveRelation">
		insert into employee_role
		values(#{empId},#{roleId})
	</insert>
	<!-- 解除员工和角色的关系 -->
	<delete id="deleteRoleRelation">
		delete from employee_role where
		employee_id=#{empId}
	</delete>
	<!-- 登录校验:返回用户以及用户所拥有的角色信息 -->
	<select id="checkLogin" resultMap="base_result">
		select e.*
		from employee e
		where
		e.name=#{username} and
		e.password=#{password}
	</select>

	<delete id="batchDelete">
		delete from employee where id in
		<!-- collection: 指定要迭代集合或者数组的类型-->
		<foreach collection="array" open="(" item="id" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>


	<select id="getByEmployeeId" resultType="String">
		select expression from permission
		where id in (select permission_id from
		role_permission where role_id in
		(select role_id from employee_role where employee_id =#{employeeId}))
	</select>
</mapper>